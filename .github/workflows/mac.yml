name: mac

on:
  push:
    tags:
    - '*'

  workflow_dispatch:

jobs:
  build:
    runs-on: macos-10.15

    steps:
      - name: Checkout
        uses: actions/checkout@v2
 
      - name: Checkout nunchuk-qt
        working-directory: ${{runner.workspace}}
        env:
          GITLAB_AT: ${{ secrets.GITLAB_AT }}
        run: |
          echo -e "machine gitlab.com\n  login bakaoh\n  password $GITLAB_AT" >~/.netrc
          git clone -b online https://gitlab.com/nunchuck/nunchuck-qt nunchuk-qt --depth 1
          cd nunchuk-qt
          git submodule update --init --recursive
        
      - name: Install dependencies
        run: |
          brew install automake libtool pkg-config berkeley-db@4 openssl@1.1 boost@1.76 qt@5 libevent sqlite sqlcipher libolm          

      - name: Install qtkeychain
        working-directory: ${{runner.workspace}}
        run: |
          git clone https://github.com/frankosterfeld/qtkeychain
          cd qtkeychain
          mkdir build
          cd build
          cmake .. -DCMAKE_PREFIX_PATH=/usr/local/opt/qt@5/lib/cmake
          cmake --build .
          sudo cmake --install . --prefix "/usr/local"

      - name: Cache Bitcoin Core
        uses: actions/cache@v2
        id: cache-contrib
        with:
          path: ${{runner.workspace}}/nunchuk-qt/contrib/libnunchuk/contrib/bitcoin
          key: mac-a0988140b71485ad12c3c3a4a9573f7c21b1eff8-2

      - name: Build Bitcoin Core
        if: steps.cache-contrib.outputs.cache-hit != 'true'
        working-directory: ${{runner.workspace}}/nunchuk-qt/contrib/libnunchuk/contrib/bitcoin
        run: |
          export PATH="/usr/local/opt/qt@5/bin:$PATH"
          export LDFLAGS="$LDFLAGS -L/usr/local/opt/qt@5/lib -L/usr/local/opt/boost@1.76/lib -L/usr/local/opt/berkeley-db@4/lib"
          export CPPFLAGS="$CPPFLAGS -I/usr/local/opt/qt@5/include -I/usr/local/opt/boost@1.76/include -I/usr/local/opt/berkeley-db@4/include"
          export BOOST_ROOT="/usr/local/opt/boost@1.76"
          ./autogen.sh
          ./configure --enable-module-ecdh --without-gui --disable-zmq --with-miniupnpc=no --with-incompatible-bdb --disable-bench --disable-tests --with-boost-libdir="/usr/local/opt/boost@1.76/lib"
          make -j8

      - name: Build nunchuk-qt
        working-directory: ${{runner.workspace}}
        shell: bash
        run: |
          export PATH="/usr/local/opt/qt@5/bin:$PATH"
          export LDFLAGS="$LDFLAGS -L/usr/local/opt/qt@5/lib -L/usr/local/opt/boost@1.76/lib -L/usr/local/opt/berkeley-db@4/lib -L/usr/local/Cellar/sqlcipher/4.5.1/lib"
          export CPPFLAGS="$CPPFLAGS -I/usr/local/opt/qt@5/include -I/usr/local/opt/boost@1.76/include -I/usr/local/opt/berkeley-db@4/include -I/usr/local/Cellar/sqlcipher/4.5.1/include"
          export BOOST_ROOT="/usr/local/opt/boost@1.76"
          mkdir ${{runner.workspace}}/nunchuk-qt/contrib/libnunchuk/contrib/sqlcipher/.libs
          cp /usr/local/lib/libsqlcipher.a ${{runner.workspace}}/nunchuk-qt/contrib/libnunchuk/contrib/sqlcipher/.libs/libsqlcipher.a
          cmake -E make_directory ${{runner.workspace}}/build
          cd build
          cmake ${{runner.workspace}}/nunchuk-qt -DCMAKE_BUILD_TYPE=Release -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCMAKE_PREFIX_PATH=/usr/local/opt/qt@5/lib/cmake -DUR__DISABLE_TESTS=ON -DBOOST_ROOT=/usr/local/opt/boost@1.76
          cmake --build . --config Release -j8
          
      - name: Deploy Dmg
        working-directory: ${{runner.workspace}}/build
        run: |
          export PATH="/usr/local/opt/qt@5/bin:$PATH"
          export LDFLAGS="$LDFLAGS -L/usr/local/opt/qt@5/lib -L/usr/local/opt/boost@1.76/lib -L/usr/local/opt/berkeley-db@4/lib -L/usr/local/Cellar/sqlcipher/4.5.1/lib"
          export CPPFLAGS="$CPPFLAGS -I/usr/local/opt/qt@5/include -I/usr/local/opt/boost@1.76/include -I/usr/local/opt/berkeley-db@4/include -I/usr/local/Cellar/sqlcipher/4.5.1/include"
          export BOOST_ROOT="/usr/local/opt/boost@1.76"
          wget -c -q "https://github.com/bitcoin-core/HWI/releases/download/2.1.0/hwi-2.1.0-mac-amd64.tar.gz" -O - | tar -xz
          mv hwi nunchuck-client-qt.app/Contents/MacOS/hwi
          mv nunchuck-client-qt.app/Contents/MacOS/nunchuck-client-qt nunchuck-client-qt.app/Contents/MacOS/Nunchuk
          mv nunchuck-client-qt.app Nunchuk.app
          macdeployqt Nunchuk.app -qmldir=${{runner.workspace}}/nunchuk-qt
      - name: Codesign executable
        env: 
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 â€”decode > certificate.p12
          security create-keychain -p "ha@0981526891" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "ha@0981526891" build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "ha@0981526891" build.keychain
          /usr/bin/codesign --force -s "Ha Duong (L6KFK5HKXJ)" ${{runner.workspace}}/Nunchuk.app -v
          mkdir nunchuk-mac-qt
          mv Nunchuk.app nunchuk-mac-qt
          zip -r nunchuk-mac-qt.zip nunchuk-mac-qt
      
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Upload Artifact
        uses: 'actions/upload-artifact@v2'
        with:
          name: nunchuk-mac-${{ steps.get_version.outputs.VERSION }}
          path: ${{runner.workspace}}/build/nunchuk-mac-qt.zip
